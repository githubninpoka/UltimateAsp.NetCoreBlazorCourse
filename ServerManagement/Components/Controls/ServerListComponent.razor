@namespace ServerManagement.Components.Controls
@inject NavigationManager NavigationManager
@inject IServersEFCoreRepository db

@if (this.servers != null && this.servers.Count > 0)
{

    <table class="table table-striped">
        <RepeaterComponent Items="servers">
            <Header>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>City</th>
                        <th>Status</th>
                        <th>Ppl online</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
            </Header>
            <Row Context="server">
                <ServerComponent Server="server"></ServerComponent>
            </Row>
        </RepeaterComponent>
    </table>
}
<div class="w-50">
    <a href="/server" class="btn btn-primary">Add Server</a> <span> With a form</span>
</div>
<br/>
<div class="w-50">
    <a href="/serversessioncontainer/name" class="btn btn-primary">Add Server</a> <span>Wizard 1 with Browser Session Storage</span>
</div>
<br/>
<div class="w-50">
    <a href="/serverdicontainer/name" class="btn btn-primary">Add Server</a> <span>Wizard 2 with a scoped DI type container</span>
</div>



@code {
    [Parameter]
    public string? CityName { get; set; }

    private string _searchString = "";

    [Parameter]
    public string? SearchString
    {
        get
        {
            return _searchString;
        }
        set
        {
            if (value != null)
            {
                _searchString = value;
            }
        }
    }

    private List<Server>? servers;

    protected override void OnParametersSet()
    {
        if (string.IsNullOrWhiteSpace(SearchString) || SearchString.Length < 3)
        {
            servers = db.GetServersByCity(CityName ?? "Toronto");
        }
        else
        {
            servers = db.SearchServers(_searchString);
        }
    }
}