@page "/qg"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.QuickGrid
@inject NavigationManager NavigationManager

<!--
    you need here:
    1. for the QuickGrid Microsoft.Aspnetcore.components.quickgrid
-->

@if(servers != null)
{
    <QuickGrid 
        Pagination="paginationState"
        Items="servers.AsQueryable()">
        <PropertyColumn Property="s => s.Name" Sortable="true"></PropertyColumn>
        <PropertyColumn Property="s => s.City" Sortable="true"></PropertyColumn>
        <TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Server>.ByAscending(s => s.IsOnline)">
            @if(context.IsOnline)
            {
                <div style="color:green">
                    Online
                </div>
            }
            else
            {
                <div style="color:red">
                    Offline
                </div>
            }
        </TemplateColumn>
        <TemplateColumn Title="People">
            @if(context.IsOnline)
            {
                Random rnd = new Random();
                int rndNumber = rnd.Next(0, 500);
                <text>@rndNumber</text>
            }
            else
            {
                <div>N/A</div>
            }
        </TemplateColumn>
        <TemplateColumn>
            @if(context.IsOnline)
            {
                <button type="button" @onclick="@(() => {context.IsOnline = !context.IsOnline;})" class="btn btn-outline-danger">Off</button>
            }
            else
            {
                <button type="button" @onclick="@(() => {context.IsOnline = !context.IsOnline;})" class="btn btn-outline-success">On</button>
            }
        </TemplateColumn>
        <TemplateColumn>
            <ChildContent Context="Server">
                <EditForm Model="Server"
                          FormName="@($"form-server-{Server.ServerId}")"
                          OnValidSubmit="@(() => DeleteServer(Server.ServerId))">
                    <button type="submit" class="btn btn-primary">Delete</button>
                </EditForm>
            </ChildContent>
        </TemplateColumn>
    </QuickGrid>
        <Paginator State="paginationState"></Paginator>
}

@code {
    private List<Server>? servers = ServersRepository.GetServers();

    private PaginationState paginationState = new() { ItemsPerPage=5 };

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            var server = ServersRepository.GetServerById(serverId);
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/qg");
        }
    }
}
