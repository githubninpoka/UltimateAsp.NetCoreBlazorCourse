@page "/servers/add"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject IServersEFCoreRepository db
<h3>Add a Server</h3>

<EditForm Model="server" FormName="AddServerForm" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <FieldComponent Label="Servername">
        <Control>
            <InputText @bind-Value="server.Name" class="form-control"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.Name"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
        <Control>
            <InputText @bind-Value="server.City" class="form-control"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.City"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>
    <FieldComponent Label="Online?">
        <Control>
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </Control>
    </FieldComponent>

    <button class="btn btn-primary" type="submit">Create</button>
    &nbsp;
    <a href="/servers" class="btn btn-secondary">Cancel</a>
</EditForm>

@code{
    [SupplyParameterFromForm(FormName = "AddServerForm")]
    private Server? server { get; set; } = new Server();

    private void Submit()
    {
        if (server != null)
        {
            db.AddServer(server);
            NavigationManager.NavigateTo($"/servers/back_from/{server.City}");
        }
    }
}